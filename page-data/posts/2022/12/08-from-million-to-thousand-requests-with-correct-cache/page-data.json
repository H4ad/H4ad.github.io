{"componentChunkName":"component---src-pauliescanlon-gatsby-theme-terminal-layouts-source-layout-js","path":"/posts/2022/12/08-from-million-to-thousand-requests-with-correct-cache/","result":{"data":{"mdx":{"id":"217bcb63-b1d3-57fe-b149-e00aff34e250","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"From a million to a thousand requests with correct caching\",\n  \"date\": \"2020-07-26T00:00:00.000Z\",\n  \"dateModified\": \"2020-07-26T00:00:00.000Z\",\n  \"author\": \"Vinícius Lourenço\",\n  \"tags\": [\"AWS\", \"Cloudfront\", \"Serverless\"],\n  \"featuredImage\": \"26-os-poderes-do-css.jpg\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"First, the results\"), mdx(\"p\", null, \"A journey about how I went from this:\"), mdx(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: \"/images/posts/2022/12/08/lambda_v1.jpg\",\n    alt: \"The amount of invocations in v1.\"\n  }), mdx(\"p\", null, \"To this:\"), mdx(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: \"/images/posts/2022/12/08/lambda_v2.jpg\",\n    alt: \"The amount of invocations in v2.\"\n  }), mdx(\"p\", null, \"If you don't like reading images, don't worry, I have a table:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Version\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Invocations (peak)\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Num. of Concurrency Lambdas (peak)\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"v1\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"1,51 million\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"200\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"v2\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"1,6 thousand\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"11\")))), mdx(\"p\", null, \"Well, I can say definitly is a blazing fast improvement, right?\"), mdx(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: \"/images/posts/2022/12/08/fast-blazing-fast.gif\",\n    alt: \"Brazing fast, as The Primegean says.\"\n  }), mdx(\"h2\", null, \"Ok, context please?\"), mdx(\"p\", null, \"Okay, the following task came to me in a sunday morning:\"), mdx(\"div\", {\n    style: {\n      backgroundColor: '#FFF',\n      width: '100%'\n    }\n  }, mdx(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: \"/images/posts/2022/12/08/context.png\",\n    alt: \"The conversation between me and my manager.\"\n  })), mdx(\"p\", null, \"With these requirements, let's present the first architecture I choose.\"), mdx(\"h2\", null, \"v1 Architecture\"), mdx(\"p\", null, \"About the technologies, I choose:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NestJS with Fastify.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For performance, I leave as little middleware as possible, I even remove \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"compression\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rate-limit\"), \" to not cost too much in the performance.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stateless JWTs to authenticate.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usually, I prefer to hit the database every request to check if the JWT is still valid, in this case, I skip this part and keep the JWT expire time as low as possible.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS Lambda\"), \" to host the code.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The advantage of using this guy is I can pay only the usage, and the TV Show only runs once in the week, so this guys fits very well.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS API Gateway HTTP\"), \" to expose the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS Lambda\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HTTP\"), \" version instead \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"REST\"), \" makes me reduce costs, instead paying $4 per million, I only pay $1.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS ElastiCache\"), \" to cache every data to reduce database workload in hot-paths.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I choose a cluster with 2 instances of 0,5GB, I will not save too much information but I need to have high read capacity.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS RDS Postgres\"), \" as the database service.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For this guy, I knew it I will not use so much, so I choose just a T4g.small with 2vCPU with 2GB RAM.\")))), mdx(\"p\", null, \"The architecture looks like:\"), mdx(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: \"/images/posts/2022/12/08/v1_architecture.jpg\",\n    alt: \"The v1 architecture.\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Fun fact: I cost around $70 without any API call.\")), mdx(\"h3\", null, \"But wait, why dind't you choose Y instead X?\"), mdx(\"p\", null, \"At this point, you can think about why I didn't use NoSQL database, or host in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AWS EC2\"), \", or use another technology.\"), mdx(\"p\", null, \"My answer to this is just: I had 2 weeks to build a system, test and deploy it to be used by the TV Show.\"), mdx(\"p\", null, \"Also, I will explain further, it almost have no difference the technology I choose for the database, to host the API, the main bottlenecks of my application\\nis not in those areas.\"), mdx(\"p\", null, \"Choose technologies that your team is confortable and you know, if you have more time you can explore and test new things but with little time,\\ngo with technologies that you already deployed in production and these was the technologies that I knew it in that time.\"), mdx(\"h2\", null, \"The hot path of V1\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hot Path\"), \" is the area of your code that is more accessed, in my case, was two routes:\"), mdx(\"h3\", null, \"GET: \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"/polls\")), mdx(\"p\", null, \"This route return the current polls to the users see which singer currently can be voted.\"), mdx(\"p\", null, \"To have better performance and to not hit the database everytime, I cache this data inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ElastiCache\"), \",\\nso everytime someone ask to the open polls, I return this data that was cached by 3s.\"), mdx(\"p\", null, \"This cache relys on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AWS Lambda\"), \", inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NestJS\"), \" service that deals with the request of getting the polls.\\nRemeber this information, I will talk about it again in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"V2\"), \" architecture.\"), mdx(\"p\", null, \"Also, this route was called every 3s by the users because we need to check if the poll still available,\\nthe administrators could enable and disbled whetever time they want.\"), mdx(\"h3\", null, \"POST: \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"/polls/{pollId}/signers/{signerId}\")), mdx(\"p\", null, \"In this route, the users could select which singer they want. And because the user can call this route as many times they want,\\nthis route is insanely called.\"), mdx(\"p\", null, \"To reduce the stress in the database, I only make 1 database call in this route, is the insert to save the vote.\\nTo count the amount of votes, I leave this task to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ElastiCache\"), \" and I use this insanely well designed library called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mlomb/redis-rank\"\n  }), \"redis-rank\"), \".\\nWith this library, I could make a rank for each poll easily and insert the votes one by one as soon it reaches.\"), mdx(\"p\", null, \"To check if the vote is valid, I cache the information in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ElastiCache\"), \" and I just look up to it and with this optimization, I could save 2 database calls.\"), mdx(\"p\", null, \"Also, I didn't use foreign keys in the database that saves the votes because I didn't want the database to make the job I already was doing of checking if the information\\nis valid, in this table, I only leave an index in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pollId\"), \" to be able to count and compare the votes once the poll ends to check if everything is sincronized.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"First, the results A journey about how I went from this: To this: If you don't like reading images, don't worry, I have a table: Version…","timeToRead":3,"wordCount":{"words":706},"frontmatter":{"title":"From a million to a thousand requests with correct caching","tags":["AWS","Cloudfront","Serverless"],"date":"2020-07-26T00:00:00.000Z","dateModified":"2020-07-26T00:00:00.000Z","author":"Vinícius Lourenço","status":null,"isPrivate":null,"url":null,"misc":null,"featuredImage":null,"embeddedImages":null},"fields":{"slug":"/posts/2022/12/08-from-million-to-thousand-requests-with-correct-cache/","owner":"source","parent":"posts"}}},"pageContext":{"id":"217bcb63-b1d3-57fe-b149-e00aff34e250","prev":{"frontmatter":{"title":"The power of CSS","status":null},"fields":{"slug":"/posts/2020/07/26-os-poderes-do-css/"}},"next":{"frontmatter":{"title":"Facens Covid","status":null},"fields":{"slug":"/projects/2020-07-01-facens-covid/"}},"parent":"posts"}},"staticQueryHashes":["1469902088","1756707795","1826328981"]}